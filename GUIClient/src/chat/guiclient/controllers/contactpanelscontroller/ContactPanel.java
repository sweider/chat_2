package chat.guiclient.controllers.contactpanelscontroller;

import chat.guiclient.controllers.chatscontrollsystem.IChatsController;
import chat.shared.Contact;

import javax.swing.*;
import java.awt.*;

/**
 * Created by alex on 12/6/14.
 */
public class ContactPanel extends javax.swing.JPanel {
    public static final String HINT_ENDING = "new messages";
    private static Color WITH_NEW_MESSAGES_COLOR;
    private static Color WITHOUT_NEW_MESSAGES_COLOR;
    private final IChatsController chatsController;
    private final Contact contact;
    private JLabel nickLabel;
    private int currentNotReadMsgCount = 0;


    /**
     * Creates new form ContactPanel
     */
    public ContactPanel(IChatsController controller, Contact contact) {
        this.chatsController = controller;
        this.contact = contact;
        initComponents();
        WITHOUT_NEW_MESSAGES_COLOR = new Color(this.getBackground().getRGB());
        WITH_NEW_MESSAGES_COLOR = new Color(this.getBackground().darker().getRGB());
    }



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        nickLabel = new JLabel();

        setMaximumSize(new java.awt.Dimension(32767, 40));
        setMinimumSize(new java.awt.Dimension(0, 40));
        setPreferredSize(new java.awt.Dimension(150, 40));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onFormClicked();
            }
        });
        setCursor(new Cursor(Cursor.HAND_CURSOR));

        nickLabel.setFont(new java.awt.Font("Droid Serif", 1, 13)); // NOI18N
        nickLabel.setForeground(new Color(51, 51, 51));
        nickLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nickLabel.setText(this.contact.getNickName());
        nickLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        onFormClicked();
                    }
                });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nickLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(nickLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>

    public void markAsWithNewMessages(){
        this.setBackground(WITH_NEW_MESSAGES_COLOR);
        String HINT = ++currentNotReadMsgCount + HINT_ENDING;
        this.setHoverHint(HINT);
        this.repaint();

    }

    public void markAsWithoutNewMessages(){
        this.setBackground(WITHOUT_NEW_MESSAGES_COLOR);
        this.currentNotReadMsgCount = 0;
        this.setHoverHint(0 + HINT_ENDING);
        this.repaint();
    }

    public void setHoverHint(String hint){
        this.setToolTipText(hint);
        this.nickLabel.setToolTipText(hint);
    }

    private void onFormClicked(){
        this.chatsController.activateChatForContact(this.contact);
        this.markAsWithoutNewMessages();
    }
}